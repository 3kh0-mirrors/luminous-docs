"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1066],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=r.createContext({}),p=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(a.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=i,f=u["".concat(a,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=d;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l[u]="string"==typeof e?e:i,s[1]=l;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},978:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const o={},s="Deployment",l={unversionedId:"services/dispenser/deployment",id:"services/dispenser/deployment",title:"Deployment",description:"System requirements",source:"@site/docs/services/dispenser/deployment.md",sourceDirName:"services/dispenser",slug:"/services/dispenser/deployment",permalink:"/docs/services/dispenser/deployment",draft:!1,editUrl:"https://github.com/NebulaServices/luminous-docs/docs/services/dispenser/deployment.md",tags:[],version:"current",frontMatter:{},sidebar:"sdkSidebar",previous:{title:"Dispenser",permalink:"/docs/services/dispenser/"},next:{title:"commands",permalink:"/docs/services/dispenser/commands"}},a={},p=[{value:"System requirements",id:"system-requirements",level:2},{value:"Installation",id:"installation",level:2},{value:"On a free cloud service like Repl.it",id:"on-a-free-cloud-service-like-replit",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"deployment"},"Deployment"),(0,i.kt)("h2",{id:"system-requirements"},"System requirements"),(0,i.kt)("p",null,"Dispenser requires:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"an Internet connection at all times"),(0,i.kt)("li",{parentName:"ul"},"40 MB of free disk space"),(0,i.kt)("li",{parentName:"ul"},"Node.JS 16.9 and NPM 7 or newer")),(0,i.kt)("p",null,"Dispenser theoretically could run on your toaster. We however don't support that. We only provide support for Windows and Linux deployments."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,"To install Dispenser, you must first clone the repository:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/NebulaServices/Dispenser.git\ncd Dispenser\n")),(0,i.kt)("p",null,"Then install dependencies:\n",(0,i.kt)("inlineCode",{parentName:"p"},"npm i")," (this may take some time)"),(0,i.kt)("p",null,"Then copy ",(0,i.kt)("inlineCode",{parentName:"p"},"config-example.json")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"config.json"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Windows\ncopy .env.example .env\n\n# Linux\ncp .env.example .env\n")),(0,i.kt)("p",null,"Then edit ",(0,i.kt)("inlineCode",{parentName:"p"},".env")," with your favourite text editor and fill out the keys.\nAn example of a complete ",(0,i.kt)("inlineCode",{parentName:"p"},"config.json")," is below.\n",(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/60532517/175794520-720e1a7c-b11f-4894-9331-0e4b68af3cc4.png",alt:"A complete config.json file"})),(0,i.kt)("p",null,"Finally, start the bot with ",(0,i.kt)("inlineCode",{parentName:"p"},"npm start"),". Happy Dispensing!"),(0,i.kt)("p",null,"(Tip: You can use a process manager like PM2 or systemd to run the bot in the background)"),(0,i.kt)("h2",{id:"on-a-free-cloud-service-like-replit"},"On a free cloud service like Repl.it"),(0,i.kt)("p",null,"Unfortunately, we do not have ",(0,i.kt)("strong",{parentName:"p"},"official")," support for these services yet. However, it is possible to host dispenser on it."))}m.isMDXComponent=!0}}]);